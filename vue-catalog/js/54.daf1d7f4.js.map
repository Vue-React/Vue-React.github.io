{"version":3,"file":"js/54.daf1d7f4.js","mappings":"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","sources":["webpack://vue-catalog/./src/views/AddView.vue","webpack://vue-catalog/./src/components/FormAdd.vue","webpack://vue-catalog/./src/data/languages/notifications/FormAddData.js","webpack://vue-catalog/./src/components/FormAdd.vue?e25e","webpack://vue-catalog/./src/data/languages/AddViewData.js","webpack://vue-catalog/./src/views/AddView.vue?84db"],"sourcesContent":["<template>\n  <div>\n    <!-- <h1>Добавление авто</h1> -->\n    <h1>{{ insert[lang].header }}</h1>\n\n    <div v-if=\"$store.state.appIsStarting\" class=\"loader1\"></div>\n    <div v-else>\n      <div v-if=\"!$store.state.isAuth\">\n        <login-form/>\n      </div>\n      <div v-else>\n        <form-add :insert=\"insert[lang]\"/>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport LoginForm from '@/components/LoginForm'\nimport FormAdd from '@/components/FormAdd.vue'\nimport insert from '@/data/languages/AddViewData.js'\nimport useLang from '@/hooks/useLang'\n\nexport default {\n  // name: 'HomeView',\n  components: { LoginForm, FormAdd },\n  // data() {\n  //   return {\n  //     name: 'AddView',\n  //     // languages: languages,\n  //     // insert: languages.en,\n  //   }\n  // },\n  // methods: {\n  //   async login() {\n  //     // // await this.$store.dispatch('logout')\n  //     // тут сделать авторизацию. Если ок - ставим state.isAuth = true\n  //     await this.$store.commit('Login')\n  //     this.$router.push('/')\n  //   },\n  // },\n  // Composition API\n  setup() {\n    const { lang } = useLang('AddView')\n\n    return { lang, insert }\n  }\n}\n</script>\n","<template>\r\n    <!-- <h1 class=\"mb-20\">{{ this.header }}</h1> -->\r\n    <!-- Добавление автомобиля в каталог -->\r\n    <!-- Будет присвоен ID: <b>{{ $store.state.updProd.id }}</b><br> -->\r\n    <form @submit.prevent>\r\n        <!-- Марка:<br> -->\r\n        {{ insert.brand.label }}:\r\n        <div class=\"form-group mb-10\">\r\n            <input\r\n                :class=\"['form-control w540', { notfilled: isFilled1 }]\"\r\n                :value=\"$store.state.newProd.brand\"\r\n                @input=\"inputBrand\"\r\n                :placeholder=\"insert.brand.placeholder\"\r\n            />\r\n        </div>\r\n            <!-- <input\r\n                ref=\"focusHere\"\r\n                :class=\"['w540 mb-10', { notfilled: isFilled1 }]\"\r\n                :value=\"$store.state.newProd.brand\"\r\n                @input=\"inputName\"\r\n                placeholder=\"Напишите название товара\"\r\n            /><br> -->\r\n        <!-- Модель: -->\r\n        {{ insert.model.label }}:\r\n        <div class=\"form-group mb-10\">\r\n            <input\r\n                :class=\"['form-control w540', { notfilled: isFilled2 }]\"\r\n                :value=\"$store.state.newProd.model\"\r\n                @input=\"inputModel\"\r\n                :placeholder=\"insert.model.placeholder\"\r\n            />\r\n        </div>\r\n            <!-- <input\r\n                :class=\"['w540 mb-10', { notfilled: isFilled2 }]\"\r\n                :value=\"$store.state.newProd.model\"\r\n                @input=\"inputDescr\"\r\n                placeholder=\"\"\r\n            /><br> -->\r\n        {{ insert.price }}:\r\n        <!-- Цена: -->\r\n        <div class=\"form-group mb-20\">\r\n            <input\r\n                class=\"form-control w100 text-center inline-block\" \r\n                :value=\"$store.state.newProd.price\"\r\n                @input=\"inputPrice\"\r\n                placeholder=\"\"\r\n            />\r\n        </div>\r\n\r\n        <multi-upload\r\n            ref=\"uplModule\"\r\n            :uploadButton=\"insert.uploadButton\"\r\n            :uploadedFiles=\"insert.uploadedFiles\"\r\n            \r\n        />\r\n\r\n        <hr class=\"w540 hr-dashed\">\r\n        <h5>{{ insert.translationHeader }}:</h5>\r\n        {{ insert.brand2.label }}:\r\n        <div class=\"form-group mb-10\">\r\n            <input\r\n                :class=\"['form-control w540']\"\r\n                v-model=\"$store.state.newProd.brand2\"\r\n                :placeholder=\"insert.brand2.placeholder\"\r\n            />\r\n        </div>\r\n            <!-- <input\r\n                ref=\"focusHere\"\r\n                :class=\"['w540 mb-10', { notfilled: isFilled1 }]\"\r\n                :value=\"$store.state.newProd.brand\"\r\n                @input=\"inputName\"\r\n                placeholder=\"Напишите название товара\"\r\n            /><br> -->\r\n        <!-- Модель: -->\r\n        {{ insert.model2.label }}:\r\n        <div class=\"form-group mb-10\">\r\n            <input\r\n                :class=\"['form-control w540 mb-30']\"\r\n                v-model=\"$store.state.newProd.model2\"\r\n                :placeholder=\"insert.model2.placeholder\"\r\n            />\r\n        </div>\r\n            <!--\r\n            onChange={ inputPrice } -->\r\n        <button @click=\"checkForm\" class=\"btn2 greenBtn\">{{ insert.addButton }}</button>\r\n    </form><br>\r\n</template>\r\n\r\n<script>\r\nimport MultiUpload from '@/components/MultiUpload'\r\nimport { define } from '@/data/globals.js'\r\nimport useAuth from '@/hooks/useAuth'\r\nimport useNotify from '@/hooks/useNotify'\r\nimport axios from 'axios'\r\nimport useProducts from '@/hooks/useProducts'\r\nimport notifys from '@/data/languages/notifications/FormAddData'\r\nimport useLang from '@/hooks/useLang'\r\n// import customAxios from '@/hooks/useInterceptors'\r\n\r\nexport default {\r\n    components: {\r\n        MultiUpload,\r\n    },\r\n    props: {\r\n        insert: {\r\n            type: Object,\r\n            required: true\r\n        },\r\n    },\r\n    data() {\r\n        return {\r\n            name: 'FormAdd',\r\n            // languages: languages,\r\n            // insert: languages.en,\r\n            isFilled1: false,\r\n            isFilled2: false,\r\n        }\r\n    },\r\n    // emits: [\"create\"],\r\n    methods: {\r\n        inputPrice(event) {\r\n            // оставляем только цыфры и точку\r\n            this.$store.commit('SetNewPrice', this.checkPrice(event.target.value))\r\n        },\r\n        // inputPrice(event) {\r\n        //     // оставляем только цыфры и точку\r\n        //     let filteredValue = event.target.value.replace(/[^.\\d]+/g,\"\").replace( /^([^.]*\\.)|\\./g, '$1' )\r\n        //     this.$store.commit('SetNewPrice', filteredValue)\r\n        // },\r\n        inputBrand(event) {\r\n            this.$store.commit('SetNewBrand', event)\r\n            // сняте подсветки, если поле заполнено\r\n            if(this.$store.state.newProd.brand.length !== 0) this.isFilled1 = false; else this.isFilled1 = true\r\n        },\r\n        inputModel(event) {\r\n            this.$store.commit('SetNewModel', event)\r\n            // сняте подсветки, если поле заполнено\r\n            if(this.$store.state.newProd.model.length !== 0) this.isFilled2 = false; else this.isFilled2 = true\r\n        },\r\n        checkForm() {\r\n            // подсветка пустых полей\r\n            if(this.$store.state.newProd.brand.length === 0) this.isFilled1 = true\r\n            if(this.$store.state.newProd.model.length === 0) this.isFilled2 = true\r\n            // Поля заполнены - добавим товар\r\n            if(!this.isFilled1 && !this.isFilled2) this.createProduct()\r\n        },\r\n        async createProduct() {\r\n            console.log('\\n\\n@click ~~~~~~~~~~ createProduct ~~~~~~~~~~ ')\r\n            // console.log('Создание товара. Перекрыть экран (\"заблокировать интерфейс\") и показать спинер.\\nОтправить запрос на бэк');\r\n\r\n            const customAxios = axios.create({ // baseURL: 'http://yourcoolapi.com/api',\r\n                withCredentials: true, \r\n            })\r\n\r\n            customAxios.interceptors.request.use(\r\n                config => {\r\n                    console.log('>>>> customAxios - request (config)')\r\n\r\n                    let localToken = localStorage.getItem('AccessToken')\r\n                    if(localToken) localToken = encodeURI(localToken)\r\n                    // Для информации:\r\n                    // encodeURI заменяет киррилические и другие символы на соответствующими им UTF-8 escape-последовательности. Незаменяемые символы: латинский алфавит, десятичные цифры, - _ . ! ~ * ' ( ) #\r\n                    config.headers.Authorization = 'Bearer ' + localToken\r\n                    return config\r\n                }\r\n            )\r\n\r\n            customAxios.interceptors.response.use(\r\n                config => {\r\n                    console.log('>>>> customAxios - response (config)')\r\n                    return config;\r\n                },\r\n                async error => {\r\n                    console.log('>>>> customAxios - response (error)')\r\n                    const originalRequest = error.config\r\n                    if (error.response.status == 401 &&\r\n                        error.config &&\r\n                        !error.config._isRetry\r\n                    ) {\r\n                        originalRequest._isRetry = true\r\n                        console.log('> 401 !!!!!!!!!!!: ')\r\n                        \r\n                        if(await this.tokenRefresh()) {\r\n                            console.log(' tokenRefresh TRUE!')\r\n                            return customAxios.request(originalRequest)\r\n                        }\r\n                        // else {\r\n                        //     console.log(' tokenRefresh FALSE! ')\r\n                        //     console.log('НЕ АВТОРИЗОВАН')\r\n                        // } // if\r\n\r\n                    }\r\n\r\n                    throw error; // прокидывает ошибки (как бы на верхний уровень), которые вернула функция tokenRefresh()\r\n                } // async error\r\n            ) // customAxios.interceptors.response\r\n                 \r\n            try {\r\n                const response = await customAxios.post( define.pathToAPI + '/products/create.php',\r\n                // const { data } = await customAxios.post( define.pathToAPI + '/products/create.php',\r\n                // const response = await axios.post( define.pathToAPI + '/products/create.php',\r\n                    JSON.stringify({\r\n                        // id: this.$store.state.newProd.id,\r\n                        price: this.$store.state.newProd.price,\r\n                        pictures: this.$refs.uplModule.newPics,\r\n                        language: this.$store.state.language,\r\n                        brand: this.$store.state.newProd.brand,\r\n                        model: this.$store.state.newProd.model,\r\n\r\n                        brand2: this.$store.state.newProd.brand2,\r\n                        model2: this.$store.state.newProd.model2,\r\n                    }),\r\n                    {\r\n                        // withCredentials: true, // определяет, должны ли создаваться кросс-доменные Access-Control запросы с использованием таких идентификационных данных как cookie, авторизационные заголовки или TLS сертификаты. Если здесь установили true, то на стороне бека нужно установить header(\"Access-Control-Allow-Credentials: true\")\r\n                        headers: {\r\n                            // Authorization: 'Bearer YOUR_JWT_TOKEN_HERE',\r\n                            Accept: 'application/json',\r\n                            'Content-Type': 'application/json',\r\n                        }\r\n                    }\r\n                )\r\n\r\n                // console.log('response: ', response);\r\n                // console.log('data: ', data);\r\n                console.log('[3] response: ', response)\r\n                // console.log('response.data: ', response.data);\r\n                // console.log('response.data.status: ', response.data.status);\r\n\r\n                // обработка ответа\r\n                if(response.data.status === 'success') {\r\n                    this.$store.commit('SetNewId', response.data.id)\r\n                    this.$store.commit('SetNewPictures', this.$refs.uplModule.newPics)\r\n                    // this.$store.commit('SetNewPictures', response.data.pictures)\r\n                    // this.$refs.uplModule.newPics\r\n                    // console.log('[Получили ответ \"ОК, CREATED\" -> \\nФиксируем изменения во VUE/Пушим зеленое уведомление]')\r\n                    // this.createData()\r\n                    // добавление нового товара (в массив)\r\n                    // this.$store.commit('AddProduct')\r\n                    this.getProducts('createProduct()')\r\n                    this.$store.commit('ClearNewProd')\r\n                    // Очистка массива файлов, скрытие прогресс-бара и очистка поля input\r\n                    this.$refs.uplModule.hideBarAndClean()\r\n                    // // Отключение заморозки действий\r\n                    // this.$store.commit('SetFreeze', false)\r\n                    // Автомобиль успешно добавлен\r\n                    this.pushNotify( notifys[this.lang].text1, 'notifyGreen')\r\n                    // console.log('Created!\\n(Вывести на экран всплывающее уведомление)')\r\n                } else {\r\n                    // Ошибка. Ответ сервера: ... <br>Подробности в консоли\r\n                    this.pushNotify( notifys[this.lang].text5_1 + response.data.error + notifys[this.lang].text5_2, 'notifyOrange')\r\n                    console.log('Ошибка:' + response)\r\n                }\r\n\r\n            } catch (e) {\r\n                // Если интерсептор не вернул ошибки, то пропускаем обработку ошибок\r\n                if(!e.response) return\r\n                \r\n                console.log('e: ', e);\r\n                \r\n                if(e.code === 'ERR_NETWORK') {\r\n                    // Нет подключения к серверу\r\n                    this.pushNotify( notifys[this.lang].errNetwork, 'notifyOrange')\r\n                    console.log('Нет подключения к серверу')\r\n                    return\r\n                }\r\n\r\n                // Обработка ошибок, которые вернула функция tokenRefresh()\r\n                // (из customAxios.interceptors.response)\r\n                // throw error прокидывает ошибки (как бы на верхний уровень)\r\n                switch(e.response.data.status) {\r\n                    case 'expired':\r\n                        console.log(' expired [E1] (BOTH TOKENS IS EXPIRED) ');\r\n                        // this.tokenRefresh()\r\n                        break\r\n                    case 'failed':\r\n                        console.log(' failed [E2]');\r\n                        // this.pushNotify('Alarm! Передан некорректный токен.<br>Доступ закрыт', 'notifyRed')\r\n                        break\r\n                    case 'denied':\r\n                        console.log(' denied [E3]');\r\n                        // this.pushNotify('Alarm! Передан пустой токен.<br>Доступ закрыт', 'notifyRed')\r\n                        break\r\n                    case 'approved':\r\n                        console.log(' approved [E4] ');\r\n                        // this.pushNotify('Alarm! Передан пустой токен.<br>Доступ закрыт', 'notifyRed')\r\n                        break\r\n                    case 'locked':\r\n                        console.log(' locked [E5] ');\r\n                        // this.pushNotify('Alarm! Передан пустой токен.<br>Доступ закрыт', 'notifyRed')\r\n                        break\r\n                    default:\r\n                        // this.pushNotify('Ошибка. Подробности в консоли', 'notifyOrange')\r\n                        // console.log(e)\r\n                        console.log('error [E6]: ' + e)\r\n                        break\r\n                } // switch\r\n\r\n            }\r\n        },\r\n        // // добавление нового товара (в массив)\r\n        // createData() {\r\n        //     // this.products.push({...this.$store.state.newProd})\r\n        //     this.$store.commit('AddProduct')\r\n\r\n        //     // console.log(this.products)\r\n        //     this.$store.commit('ClearNewProd')\r\n        //     // Очистка массива файлов, скрытие прогресс-бара и очистка поля input\r\n        //     this.$refs.uplModule.hideBarAndClean()\r\n        //     // Отключение заморозки действий\r\n        //     this.$store.commit('SetFreeze', false)\r\n        //     this.pushNotify('Автомобиль успешно добавлен', 'notifyGreen')\r\n        //     // console.log('Created!\\n(Вывести на экран всплывающее уведомление)')\r\n        // },\r\n\r\n        // setInsertValue() {\r\n        //     console.log('    setInsertValue()')\r\n        //     // console.log('    this.$store.getters.language: ', this.$store.getters.language);\r\n\r\n        //     switch (this.$store.getters.language) {\r\n        //     // switch (this.$store.state.language) {\r\n        //         case 'en':\r\n        //             this.insert = languages.en\r\n        //             console.log('   language - EN')\r\n        //             break\r\n        //         case 'uk':\r\n        //             this.insert = languages.uk\r\n        //             console.log('   language - UK')\r\n        //             break\r\n        //         default:\r\n        //             this.insert = languages.en\r\n        //             console.log('   default language - EN')\r\n        //             break\r\n        //     } // switch\r\n        //     console.log('-------- [2] --------')\r\n        // } // setInsertValue\r\n\r\n\r\n    },// methods\r\n    \r\n    beforeMount() {\r\n        this.$store.commit('ClearUpdProd')\r\n    },\r\n    // mounted() {\r\n    //     console.log('-> mounted')\r\n    //     this.setInsertValue()\r\n    // },\r\n    // watch: {\r\n    //     '$store.state.language': function() {\r\n    //         console.log('-> value changes detected');\r\n            \r\n    //         this.setInsertValue()\r\n    //         // this.setInsertValueMixin()\r\n    //     }\r\n    // },// watch\r\n    // Composition API\r\n    setup() {\r\n        const { tokenRefresh } = useAuth()\r\n        const { lang } = useLang('FormAdd')\r\n        const { pushNotify } = useNotify()\r\n        const { checkPrice,  getProducts } = useProducts()\r\n        // const { checkPrice } = useProducts()\r\n        // const { insert } = ()\r\n        // const insert = ref(languages)\r\n        // \r\n        // const store = useStore()\r\n\r\n        // let lang = ref(store.language)\r\n        // console.log('languages: ', languages);\r\n\r\n        // if(store.language === 'en') {\r\n        //     console.log('language - EN')\r\n        //     lang = languages.en\r\n        // } else {\r\n        //     console.log('language - UK')\r\n        //     lang = languages.uk\r\n        // }\r\n\r\n        // let insert = ref(lang)\r\n        // console.log('[setup] languages: ', languages);\r\n\r\n        return { tokenRefresh, lang, pushNotify, checkPrice,  getProducts }\r\n        // return { tokenRefresh, lang, pushNotify, checkPrice }\r\n        // return { tokenRefresh, pushNotify, insert }\r\n    }\r\n}\r\n</script>\r\n\r\n<style>\r\n\r\n</style>","export default {\r\n    en: {\r\n        errNetwork: 'English version of Notification<br>Нет подключения к серверу',\r\n\r\n        text1: 'English version of Notification<br>Автомобиль успешно добавлен',\r\n        text5_1: 'English version of Notification<br>Ошибка. Ответ сервера: ',\r\n        text5_2: '<br>Подробности в консоли',\r\n\r\n    },\r\n    uk: {\r\n        errNetwork: 'Нет подключения к серверу',\r\n        \r\n        text1: 'Автомобиль успешно добавлен',\r\n        text5_1: 'Ошибка. Ответ сервера: ',\r\n        text5_2: '<br>Подробности в консоли',\r\n\r\n    },\r\n}\r\n","import { render } from \"./FormAdd.vue?vue&type=template&id=1e815ee6\"\nimport script from \"./FormAdd.vue?vue&type=script&lang=js\"\nexport * from \"./FormAdd.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"E:\\\\OpenServer\\\\domains\\\\vue\\\\vue-catalog\\\\node_modules\\\\vue-loader\\\\dist\\\\exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","export default {\r\n    en: {\r\n        header: \"Adding Auto\",\r\n        brand: {\r\n            label: \"Brand\",\r\n            placeholder: \"Type here brand\",\r\n        },\r\n        model: {\r\n            label: \"Model\",\r\n            placeholder: \"Type here model\",\r\n        },\r\n        price: \"Price\",\r\n        uploadButton: \"Upload Images\",\r\n        uploadedFiles: \"Uploaded Files\",\r\n\r\n        translationHeader: \"Translation into Ukrainian (not required)\",\r\n        brand2: {\r\n            label: \"Brand\",\r\n            placeholder: \"Type here the brand in Ukrainian\",\r\n        },\r\n        model2: {\r\n            label: \"Model\",\r\n            placeholder: \"Type here the model in Ukrainian\",\r\n        },\r\n\r\n        addButton: \"Add Auto\",\r\n    },\r\n    uk: {\r\n        header: \"Добавление авто\",\r\n        brand: {\r\n            label: \"Марка\",\r\n            placeholder: \"Напишите марку автомобиля\",\r\n        },\r\n        model: {\r\n            label: \"Модель\",\r\n            placeholder: \"Напишите модель\",\r\n        },\r\n        price: \"Цена\",\r\n        uploadButton: \"Загрузить\",\r\n        uploadedFiles: \"Загружены файлы\",\r\n\r\n        translationHeader: \"Перевод на английский (необязательно)\",\r\n        brand2: {\r\n            label: \"Марка\",\r\n            placeholder: \"Напишите марку на английском\",\r\n        },\r\n        model2: {\r\n            label: \"Модель\",\r\n            placeholder: \"Напишите модель на английском\",\r\n        },\r\n\r\n        addButton: \"Добавить\",\r\n    },\r\n}\r\n","import { render } from \"./AddView.vue?vue&type=template&id=d05607d0\"\nimport script from \"./AddView.vue?vue&type=script&lang=js\"\nexport * from \"./AddView.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"E:\\\\OpenServer\\\\domains\\\\vue\\\\vue-catalog\\\\node_modules\\\\vue-loader\\\\dist\\\\exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__"],"names":["class","_createElementBlock","_createElementVNode","_toDisplayString","$setup","header","_ctx","state","appIsStarting","_hoisted_2","isAuth","_hoisted_4","_createVNode","_component_form_add","insert","_hoisted_3","_component_login_form","onSubmit","$props","brand","label","notfilled","$data","value","newProd","onInput","$options","placeholder","model","price","_component_multi_upload","ref","uploadButton","uploadedFiles","_hoisted_7","translationHeader","brand2","$event","model2","onClick","addButton","_hoisted_12","en","errNetwork","text1","text5_1","text5_2","uk","components","MultiUpload","props","type","Object","required","data","name","isFilled1","isFilled2","methods","inputPrice","event","this","$store","commit","checkPrice","target","inputBrand","length","inputModel","checkForm","createProduct","async","console","log","customAxios","axios","withCredentials","interceptors","request","use","config","localToken","localStorage","getItem","encodeURI","headers","Authorization","response","originalRequest","error","status","_isRetry","tokenRefresh","post","define","JSON","stringify","pictures","$refs","uplModule","newPics","language","Accept","id","getProducts","hideBarAndClean","pushNotify","notifys","lang","e","code","beforeMount","setup","useAuth","useLang","useNotify","useProducts","__exports__","LoginForm","FormAdd","render"],"sourceRoot":""}